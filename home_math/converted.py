# %% [markdown]
# # <center> Линейная алгебра в контексте линейных методов. Практика.
# 
# ## <center> Прогнозирование выработки газа на скважинах.

# %% [markdown]
# ## Постановка задачи

# %% [markdown]
# У Василия, основателя компании «Газ-Таз-Ваз-Нефть», дела идут в гору: у него уже функционирует 200 скважин для добычи газа. В этом году он открывает 30 новых скважин. Однако в целях оптимизации расходов и повышения дохода Василию необходимо оценить, сколько денег будет приносить ему каждая из скважин, а также понять, какие факторы (параметры скважин) потенциально сильнее всего повлияют на объём добычи газа. Для этого Василий решил нанять вас как специалиста в области Data Science.
# 
# Василий представляет вам набор данных о добыче газа на своих скважинах. Файл с данными вы можете скачать на платформе.
# 
# **Признаки в данных:**
# 
# * Well — идентификатор скважины;
# * Por — пористость скважины (%);
# * Perm — проницаемость скважины;
# * AI — акустический импеданс ($кг/м^2 * 10^6$);
# * Brittle — коэффициент хрупкости скважины (%);
# * TOC — общий органический углерод (%);
# * VR — коэффициент отражения витринита (%);
# * Prod — добыча газа в сутки (млн. кубических футов).
# 
# **Ваша задача** — построить регрессионную модель, которая прогнозирует выработку газа на скважине (целевой признак — Prod) на основе остальных характеристик скважины, и проинтерпретировать результаты вашей модели.
# 
# Разделим задачу на две части:
# * В первой мы построим простейшую модель линейной регрессии, проанализируем результаты её работы и выберем наиболее значимые факторы для прогнозирования.
# * Во второй мы займёмся построением модели полиномиальной регрессии с регуляризацией и посмотрим на итоговые результаты моделирования.
# 

# %% [markdown]
# Импортируем необходимые библиотеки:

# %%
# Импорт библиотек
import numpy as np # для работы с массивами
import pandas as pd # для работы с DataFrame 
import seaborn as sns # библиотека для визуализации статистических данных
import matplotlib.pyplot as plt # для построения графиков

%matplotlib inline

# %% [markdown]
# Прочитаем исходные данные:

# %%
data = pd.read_csv('data/unconv.csv')
data.head()

# %% [markdown]
# ## Практика: линейная регрессия по методу наименьших квадратов

# %% [markdown]
# Для начала построим простейшую модель линейной регрессии, проанализируем результаты её работы и выберем наиболее значимые факторы для прогнозирования.
# 
# В первой части вам предстоит выполнить задания 5.0–5.6. Максимальное количество баллов, которое можно получить, — 9.

# %% [markdown]
# ### Задание 5.0. (не оценивается)
# 
# Проведите небольшой разведывательный анализ, чтобы поближе познакомиться с исходными данными. Постройте несколько визуализаций, которые помогут вам понять, как устроены исходные признаки, а также смогут продемонстрировать взаимосвязь факторов. 
# 
# Сделайте промежуточные выводы из проведённого разведывательного анализа.

# %%
# Ваш код здесь

# %% [markdown]
# ### Задание 5.1. (2 балла)
# 
# Постройте корреляционную матрицу факторов, включив в неё целевой признак. 
# 
# Для наглядности визуализируйте полученную матрицу с помощью тепловой карты. 
# 
# **Примечание.** *Для визуализации вы можете использовать любую из знакомых вам библиотек.*
# 
# На основе построенной корреляционной матрицы ответьте на следующий вопрос:
# 
# * Какие факторы сильнее всего коррелируют с целевой переменной?
# 
# Вычислите ранг и определитель полученной матрицы корреляций и приведите развёрнутые ответы на следующие вопросы:
# * Является ли корреляционная матрица плохо обусловенной (близок ли её опредитель к нулю)?
# * Что вы можете сказать о наличии коллинераности/мультиколлинеарности в данных? 
# * Применима ли в данном случае модель классической линейной регрессии по методу наименьших квадратов и почему? 

# %% [markdown]
# **Критерии оценивания:**
# - Задание выполнено верно, учтены все условия (**2 балла**): 
#     * приведён код для расчёта корреляционной матрицы;
#     * приведён код для визуализации корреляционной матрицы в виде тепловой карты;
#     * рассчитаны ранг и определитель корреляционной матрицы;
#     * предоставлены обоснованные ответы на все поставленные вопросы. 
# 
# - Задание выполнено верно, но не учтено одно условие (**1 балл**).
# - Задание выполнено неверно, не учтено несколько условий (**0 баллов**).

# %%
# Ваш код здесь

# %% [markdown]
# > *Ваши выводы здесь*

# %% [markdown]
# ### Задание 5.2. (2 балла)
# 
# Создайте матрицу наблюдений `X` и вектор правильных ответов `y`. В качестве факторов для матрицы наблюдений возьмите все имеющиеся в данных признаки. 
# 
# Постройте модель линейной регрессии по методу наименьших квадратов. Для этого воспользуйтесь матричной формулой МНК и инструментарием библиотеки numpy. 
# 
# Выведите на экран полученные оценки коэффициентов модели, округлённые до целого.
# 
# Приведите подробные выводы по полученным результатам, ответив на следующие вопросы:
# * Есть ли в ваших данных признаки, которые, согласно модели, можно назвать неинформативными, то есть они не оказывают влияния на целевую переменную или оказывают шумовое влияние?
# * Приведите интерпретацию нескольких (двух или трёх) коэффициентов полученной модели линейной регрессии.
# 

# %% [markdown]
# **Критерии оценивания:**
# - Задание выполнено верно, учтены все условия (**2 балла**): 
#     * приведён код для нахождения параметров модели линейной регрессии с помощью матричной формулы МНК;
#     * на основе полученных параметров даны верные ответы на поставленные вопросы;
#     * приведена корректная интерпретация нескольких коэффициентов полученной модели линейной регрессии.
# 
# - Задание выполнено верно, но не учтено одно из условий (**1 балл**).
# - Задание выполнено неверно, не учтено несколько условий (**0 баллов**).

# %%
# Ваш код здесь

# %% [markdown]
# > *Ваши выводы здесь*

# %% [markdown]
# ### Задание 5.3. (1 балл)
# 
# Теперь потренируемся строить предсказание для наблюдений целевой переменной. 
# 
# **а)** Постройте прогноз выработки газа для скважины со следующими параметрами:
# 
# ```python
# {
#     'Well': 106.0,
#     'Por': 15.32,
#     'Perm': 3.71,
#     'AI': 3.29,
#     'Brittle': 55.99,
#     'TOC': 1.35,
#     'VR': 2.42
#  }
# ```
# 
# Рассчитайте абсолютную ошибку построенного вами прогноза для предложенной скважины (в миллионах кубических футов в день), если известно, что на этой скважине производится `4748.315024` миллионов кубических футов газа в день. 
# 
# **б)** Постройте прогноз выработки газа для всех скважин из обучающего набора данных. Выберите метрику, по которой вы будете оценивать качество регрессионных моделей и сравнивать их между собой (можно использовать несколько метрик, но не более двух).
# 
# Рассчитайте значение выбранной метрики для вашей модели. Приведите интерпретацию полученного результата. 

# %% [markdown]
# **Критерии оценивания:**
# - Задание выполнено верно, учтены все условия (**1 балл**): 
#     * приведён код для построения прогноза выработки газа на указанной скважине и рассчитана абсолютная ошибка прогноза для этой скважины;
#     * выбрана корректная для поставленной задачи метрика (или метрики) оценки качества модели и приведён код для расчёта этой метрики на всём обучающем наборе данных;
#     * приведена корректная интерпретация полученного результата.
# 
# - Задание выполнено верно, но не учтено одно из условий, или задание выполнено неверно (**0 баллов**).

# %%
# Ваш код здесь

# %% [markdown]
# > *Ваши выводы здесь*

# %% [markdown]
# ### Задание 5.4. (1 балл)
# 
# Настало время анализа построенной модели. Посмотрите на коэффициенты и сравните их знаки со значениями выборочных корреляций между целевым признаком и факторами, которые вы нашли ранее.
# 
# Дайте развёрнутые ответы на следующие вопросы:
# 
# * Есть ли в вашей модели фактор, при котором коэффициент в модели линейной регрессии противоречит соответствующему коэффициенту корреляции? Например, корреляция говорит, что зависимость между фактором и целевой переменной прямая, а модель говорит обратное. Если таких факторов несколько, укажите их все.
# * Как вы считаете, с чем связано полученное противоречие результатов?

# %% [markdown]
# **Критерии оценивания:**
# 
# - Задание выполнено верно, даны корректные развёрнутые ответы на все поставленные в задании вопросы (**1 балл**). 
# 
# - Задание выполнено неверно, даны некорректные ответы на один или несколько поставленных в задании вопросов (**0 баллов**).

# %%
# Ваш код здесь

# %% [markdown]
# > *Ваши выводы здесь*

# %% [markdown]
# ### Задание 5.5. (2 балла)
# 
# * Исключите из данных сильно коррелированные между собой факторы. Под сильной корреляцией в данной задаче будем понимать значения выше `0.7`.
# 
# Выбирая, какой из коррелированных факторов оставить, руководствуйтесь коэффициентом корреляции с целевой переменной: оставляйте тот фактор, который больше всего коррелирует с целевой переменной (объёмом добычи газа).
# 
# * Также исключите из данных факторы, для которых корреляция с целевой переменной меньше `0.05`.
# 
# Постройте модель линейной регрессии на обновлённых после удаления факторов данных по методу наименьших квадратов. Для этого используйте матричную формулу и библиотеку numpy. Выведите значение полученных коэффициентов, округлённых до целого.
# 
# Сделайте прогноз для всего обучающего набора данных и рассчитайте выбранную вами ранее метрику (или метрики). 
# 
# Дайте подробные ответы на следующие вопросы:
# 
# * Приведите интерпретацию нескольких полученных коэффициентов (двух или трёх). Сравните их значения с полученными ранее.
# * Приведите интерпретацию полученных значений метрик. Сравните их значения с полученными ранее. 
# * Удалось ли вам побороть противоречие коэффициентов линейной регрессии и коэффициентов корреляции?

# %% [markdown]
# **Критерии оценивания:**
# - Задание выполнено верно, учтены все условия (**2 балла**): 
#     * отобраны верные факторы;
#     * на основе отобранных факторов построена модель линейной регрессии с помощью матричной формулы МНК и найдены параметры модели, соответствующие каждому из факторов;
#     * построен прогноз для всего обучающего набора данных и рассчитано значение метрики (метрика должна быть выбрана корректно);
#     * даны ответы на все поставленные в задании вопросы.
# 
# - Задание выполнено верно, но не учтено одно из условий (**1 балл**).
# - Задание выполнено верно, не учтено несколько из условий (**0 баллов**).

# %%
# Ваш код здесь

# %% [markdown]
# > *Ваши выводы здесь*

# %% [markdown]
# ### Задание 5.6. (1 балл)
# 
# Наконец, давайте построим модель линейной регрессии из библиотеки `scikit-learn (sklearn)` и сравним результаты её работы с теми, что нам удалось получить вручную. 
# 
# Постройте модель линейной регрессии на обновлённых после удаления факторов данных по методу наименьших квадратов. Для этого воспользуйтесь классом `LinearRegression` из библиотеки `sklearn`. Выведите значения полученных коэффициентов, округлённые до целого.
# 
# Сделайте прогноз для всего обучающего набора данных и рассчитайте значение выбранной вами метрики (или метрик).
# 
# Сравните результаты библиотечной реализации с тем, что вы получили ранее. 

# %% [markdown]
# **Критерии оценивания:**
# 
# - Задание выполнено верно, учтены все условия (**1 балл**): 
#     * на основе отобранных факторов построена модель линейной регрессии из библиотеки sklearn и найдены параметры модели, соответствующие каждому из факторов;
#     * построен прогноз для всего обучающего набора данных и рассчитано значение метрики (метрика должна быть выбрана корректно);
#     * приведён вывод о соответствии результатов, полученных вручную и с помощью библиотеки.
# - Задание выполнено неверно, не учтено одно или несколько условий (**0 баллов**).

# %%
# Ваш код здесь

# %% [markdown]
# > *Ваши выводы здесь*

# %% [markdown]
# ## Практика: полиномиальная регрессия и регуляризация

# %% [markdown]
# Мы продолжаем работать над задачей от владельца компании «Газ-Таз-Ваз-Нефть» Василия.
# 
# Ранее мы построили модель линейной регрессии, которая прогнозирует выработку газа на скважине. Для этого мы с помощью матрицы корреляций и рассуждений отобрали некоррелированные, значимые для предсказания признаки. **Далее мы будем использовать именно их (см. задание 5.5).**
# 
# Мы хотим улучшить результат — уменьшить ошибку прогноза. Для этого мы воспользуемся моделью полиномиальной регрессии третьей степени. Однако теперь мы знаем, что полиномиальным моделям очень легко переобучиться под исходную выборку. Так как данных у нас не так много (всего 200 скважин), то для контроля качества модели мы будем использовать кросс-валидацию. 
# 
# Приступим! Выполните задания 8.1–8.5:
# 

# %%
from sklearn.preprocessing import PolynomialFeatures, StandardScaler
from sklearn.linear_model import LinearRegression, Lasso, Ridge, ElasticNet
from sklearn.model_selection import GridSearchCV
from sklearn.model_selection import cross_validate

# %% [markdown]
# ### Задание 8.1. (1 балл)
# 
# Стандаризируйте признаки с помощью `StandartScaler` из библиотеки `sklearn`. 
# 
# Затем сгенерируйте полиномиальные признаки третьего порядка на факторах, которые вы выбрали для обучения моделей. Для этого воспользуйтесь генератором полиномов `PolynomialFeatures` из библиотеки `sklearn`. Параметр `include_bias` установите в значение `False`.
# 
# Выведите на экран, сколько факторов у вас получилось после генерации полиномиальных признаков.
# 
# **Важно:** стандартизацию необходимо произвести до генерации полиномиальных факторов!
# 
# Обучите модель линейной регрессии из библиотеки `sklearn` (`LinearRegression`) на полученных полиномиальных факторах.
# 
# Используя кросс-валидацию оцените среднее значение выбранной вами метрики (или метрик) на тренировочных и валидационных фолдах.
# 
# Проинтерпретируйте полученные результаты.

# %% [markdown]
# **Критерии оценивания:**
# 
# - Задание выполнено верно, учтены все условия (**1 балл**): 
#     * на основе отобранных факторов сгенерированы полиномиальные признаки третьего порядка;
#     * построена модель полиномиальной регрессии (линейной регрессии на полиномиальных признаках);
#     * с помощью кросс-валидации оценено среднее значение выбранной студентом метрики (или метрик) на тренировочных и валидационных фолдах (метрика должна быть выбрана корректно).
# - Задание выполнено неверно, не учтено одно или несколько из условий (**0 баллов**).

# %%
# Ваш код здесь

# %% [markdown]
# > *Ваши выводы здесь*

# %% [markdown]
# ### Задание 8.2. (2 балла)
# 
# Теперь попробуем воспользоваться линейной регрессией с регуляризацией. Для начала возьмём $L_1$-регуляризацию.
# 
# Обучите модель `Lasso` из библиотеки `sklearn` на полученных полиномиальных факторах, предварительно стандартизировав факторы. 
# 
# Коэффициент регуляризации (`alpha`) подберите самостоятельно с помощью любого известного вам метода подбора гиперпаметров.
# 
# Используя кросс-валидацию, оцените среднее значение выбранной вами метрики (или метрик) на тренировочных и валидационных фолдах.
# 
# Проинтерпретируйте полученные результаты.

# %% [markdown]
# **Критерии оценивания:**
# 
# - Задание выполнено верно, учтены все условия (**2 балла**): 
#     * правильно построена модель полиномиальной регрессии (линейной регрессии на полиномиальных признаках) с регуляризацией (Lasso), учтены условия необходимости масштабирования факторов для построения модели;
#     * приведён код для подбора параметра регуляризации (вручную или с помощью библиотечных инструментов);
#     * с помощью кросс-валидации оценено среднее значение выбранной студентом метрики (или метрик) на тренировочных и валидационных фолдах (метрика должна быть выбрана корректно).
# 
# - Задание выполнено верно, но не учтено одно из условий (**1 балл**).
# - Задание выполнено неверно, не учтено несколько условий (**0 баллов**).

# %%
# Ваш код здесь

# %% [markdown]
# > *Ваши выводы здесь*

# %% [markdown]
# ### Задание 8.3. (2 балла)
# 
# Проделаем то же самое с $L_2$-регуляризацией.
# 
# Обучите модель `Ridge` из библиотеки `sklearn` на полученных полиномиальных факторах, предварительно стандартизировав факторы. 
# 
# Коэффициент регуляризации (`alpha`) подберите самостоятельно с помощью любого известного вам метода подбора гиперпаметров.
# 
# Используя кросс-валидацию оцените среднее значение выбранной вами метрики (или метрик) на тренировочных и валидационных фолдах.
# 
# Проинтерпретируйте полученные результаты.

# %%
# Ваш код здесь

# %% [markdown]
# > *Ваши выводы здесь*

# %% [markdown]
# **Критерии оценивания:**
# 
# - Задание выполнено верно, учтены все условия (**2 балла**): 
#     * правильно построена модель полиномиальной регрессии (линейной регрессии на полиномиальных признаках) с регуляризацией (Ridge), учтены условия необходимости масштабирования факторов для построения модели;
#     * приведён код для подбора параметра регуляризации (вручную или с помощью библиотечных инструментов);
#     * с помощью кросс-валидации оценено среднее значение выбранной студентом метрики (или метрик) на тренировочных и валидационных фолдах (метрика должна быть выбрана корректно).
# 
# - Задание выполнено верно, но не учтено одно из условий (**1 балл**).
# - Задание выполнено неверно, не учтено несколько условий (**0 баллов**).

# %% [markdown]
# ### Задание 8.4. (2 балла)
# 
# Наконец, настало время комбинировать $L_1$ и $L_2$ -регуляризации.
# 
# Обучите модель `ElasticNet` из библиотеки `sklearn` на полученных полиномиальных факторах, предварительно стандартизировав факторы. 
# 
# Коэффициенты регуляризации (`alpha` и `l1-ratio`) подберите самостоятельно с помощью любого известного вам метода подбора гиперпаметров.
# 
# Используя кросс-валидацию, оцените среднее значение метрики MAPE на тренировочных и валидационных фолдах.
# 
# Проинтерпретируйте полученные результаты.

# %% [markdown]
# **Критерии оценивания:**
# 
# - Задание выполнено верно, учтены все условия (**2 балла**): 
#     * правильно построена модель полиномиальной регрессии (линейной регрессии на полиномиальных признаках) с регуляризацией (ElasticNet), учтены условия необходимости масштабирования факторов для построения модели;
#     * приведён код для подбора параметра регуляризации (вручную или с помощью библиотечных инструментов);
#     * с помощью кросс-валидации оценено среднее значение выбранной студентом метрики (или метрик) на тренировочных и валидационных фолдах (метрика должна быть выбрана корректно).
# 
# - Задание выполнено верно, но не учтено одно из условий (**1 балл**).
# - Задание выполнено неверно, не учтено несколько условий (**0 баллов**).

# %%
# Ваш код здесь

# %% [markdown]
# > *Ваши выводы здесь*

# %% [markdown]
# ### Задание 8.5. (1 балл)
# 
# Завершением вашей работы будет сводная таблица результатов, которую вы представите на презентации заказчику Василию.
# 
# Составьте таблицу (DataFrame) со следующими столбцами (имена столбцов выберите самостоятельно):
# * Наименование модели.
# * Гиперпараметры (коэффициенты регуляризации, если таковые имеются), если нет — оставьте ячейку пустой.
# * Использовались ли полиномиальные признаки при построении модели (Да/Нет или True/False).
# * Значение выбранной метрики на тренировочных фолдах при кросс-валидации модели.
# * Значение выбранной метрики на валидационных фолдах при кросс-валидации модели.
# 
# Сделайте финальный вывод по проделанной работе. Какая линейная модель из тех, что мы рассмотрели, показала наилучший результат с точки зрения качества на валидационных фолдах, а также с точки зрения переобученности?

# %% [markdown]
# **Критерии оценивания:**
# 
# - Задание выполнено верно, учтены все условия (**1 балл**): 
#     * верно составлена сводная таблица итоговых результатов построенных ранее моделей с указанными в задании столбцами;
#     * приведены итоговые выводы по проделанной работе, указано, какая из рассмотренных моделей показала наилучший результат.
# 
# - Задание выполнено неверно, не учтено одно или несколько условий (**0 баллов**).

# %%
# Ваш код здесь

# %% [markdown]
# > *Ваши выводы здесь*

# %%



